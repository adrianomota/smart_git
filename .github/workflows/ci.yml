 
name: ci

on:
  # push:
  #   branches: [dev, main, master]
  pull_request:
    types: [opened, synchronize]
    strategy:
      matrix:
        elixir: [1.13]
        otp: [24.3]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# env:
#   GUARDIAN_SECRET_KEY: ${{ secrets.GUARDIAN_SECRET_KEY }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
        with:
          otp-version: ${{ matrix.elixir }}
          elixir-version: ${{ matrix.otp }}
      - uses: actions/cache@v2
        env:
          cache-name: cache-elixir-deps
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: deps
        run: mix local.rebar --force
             mix local.hex --force
             mix deps.get
             mix deps.compile
      - name: Lint Code
        run: mix credo --strict

  check_format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
        with:
          otp-version: ${{ matrix.elixir }}
          elixir-version: ${{ matrix.otp }}
      - uses: actions/cache@v2
        env:
          cache-name: cache-elixir-deps
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: deps
        run: mix local.rebar --force
             mix local.hex --force
             mix deps.get
             mix deps.compile
      - name: FORMAT
        run: mix format --check-formatted

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
        with:
          otp-version: ${{ matrix.elixir }}
          elixir-version: ${{ matrix.otp }}
      - uses: actions/cache@v2
        env:
          cache-name: cache-elixir-deps
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: deps
        run: mix local.rebar --force
             mix local.hex --force
             mix deps.get
             mix deps.compile
      - name: Security
        run: mix sobelow --config

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
        with:
          otp-version: ${{ matrix.elixir }}
          elixir-version: ${{ matrix.otp }}
      - uses: actions/cache@v2
        env:
          cache-name: cache-elixir-deps
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: deps
        run: mix local.rebar --force
             mix local.hex --force
             mix deps.get
             mix deps.compile
      - name: ==> ðŸ”Ž Integrating test
        run: mix coveralls.json
      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
    services:
      pg:
        image: postgres:alpine

        ports: ["5432:5432"]
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
  # deploy:
  #   name: Deploy Gigalixir
  #   needs: [lint, check_format, security, test]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         ref: main # Checkout out master instead of the latest commit
  #         fetch-depth: 0 # Checkout the whole branch
  #     - uses: actions/setup-python@v2
  #       with:
  #         python-version: 3.8.1
  #     - uses: mhanberg/gigalixir-action@v0.6.2
  #       with:
  #         GIGALIXIR_USERNAME: ${{ secrets.GIGALIXIR_EMAIL }}
  #         GIGALIXIR_PASSWORD: ${{ secrets.GIGALIXIR_PASSWORD }}
  #         GIGALIXIR_APP: ${{ secrets.GIGALIXIR_APP_NAME }}
  #         GIGALIXIR_CLEAN: true
  #         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  #         MIGRATIONS: false # defaults to true

  